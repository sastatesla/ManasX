{
  "metadata": {
    "version": "1.0.0",
    "name": "Project Code Governance Rules",
    "description": "Organizational rules for maintaining code quality and consistency",
    "author": "amaan",
    "created": "2025-08-20T16:26:10.560Z"
  },
  "global": {
    "severity": "medium",
    "autofix": false,
    "reportUnusedRules": true
  },
  "rules": {
    "security": {
      "enabled": true,
      "description": "Security-related rules to prevent vulnerabilities",
      "rules": {
        "no-eval": {
          "name": "Prohibit eval() usage",
          "description": "The eval() function poses security risks and should not be used",
          "severity": "critical",
          "enabled": true,
          "message": "eval() usage is prohibited for security reasons"
        },
        "no-dangerous-html": {
          "name": "Avoid dangerous HTML manipulation",
          "description": "Direct innerHTML/outerHTML manipulation can lead to XSS vulnerabilities",
          "severity": "high",
          "enabled": true
        },
        "require-company-fetch": {
          "name": "Use company fetch wrapper",
          "description": "All API calls must use the company fetch wrapper instead of raw fetch",
          "severity": "medium",
          "enabled": true,
          "parameters": {
            "wrapperName": "companyFetch"
          }
        }
      }
    },
    "performance": {
      "enabled": true,
      "description": "Performance-related rules for optimal code execution",
      "rules": {
        "no-sync-fs": {
          "name": "Avoid synchronous file operations",
          "description": "Synchronous file operations block the event loop",
          "severity": "high",
          "enabled": true,
          "exclude": [
            "**/*.test.js",
            "**/*.spec.js"
          ]
        },
        "no-console-log": {
          "name": "Remove console.log statements",
          "description": "Console.log statements should not be present in production code",
          "severity": "low",
          "enabled": true,
          "exclude": [
            "**/*.test.js",
            "**/*.spec.js",
            "scripts/**"
          ]
        }
      }
    },
    "architecture": {
      "enabled": true,
      "description": "Architectural rules to maintain code organization",
      "rules": {
        "no-direct-db": {
          "name": "No direct database access",
          "description": "Database access should go through the repository layer",
          "severity": "high",
          "enabled": true,
          "scope": [
            "src/**/*.js",
            "src/**/*.ts"
          ]
        },
        "feature-folders": {
          "name": "Follow feature folder structure",
          "description": "Code should be organized in feature-based folders",
          "severity": "medium",
          "enabled": false
        }
      }
    },
    "naming": {
      "enabled": true,
      "description": "Naming convention rules for consistency",
      "rules": {
        "consistent-variables": {
          "name": "Consistent variable naming",
          "description": "Variables should follow the established naming convention",
          "severity": "low",
          "enabled": true,
          "autofix": true
        }
      }
    },
    "imports": {
      "enabled": true,
      "description": "Import/export related rules",
      "rules": {
        "no-relative-parent": {
          "name": "Avoid deep relative imports",
          "description": "Relative imports should not go more than 2 levels up",
          "severity": "medium",
          "enabled": true
        },
        "order": {
          "name": "Import order",
          "description": "External imports should come before internal imports",
          "severity": "low",
          "enabled": true,
          "autofix": true
        }
      }
    }
  },
  "exceptions": []
}